"""
Теперь черепашке Кондратине надо узнать не только, сколько цветочков она может
собрать, но и как ей построить свой маршрут для этого. Помогите ей!
Напомним, что Кондратине надо дойти от левого нижнего до правого верхнего угла,
а передвигаться она умеет только вверх и вправо.

Формат ввода
В первой строке даны размеры поля n и m (через пробел). Оба числа лежат в
диапазоне от 1 до 1000. В следующих n строках задано поле. Каждая строка
состоит из m символов 0 или 1 и завершается переводом строки. Если в клетке
записана единица, то в ней растет цветочек.

Формат вывода
Выведите в первой строке максимальное количество цветочков, которое сможет
собрать Кондратина. Во второй строке выведите маршрут в виде последовательности
символов «U» и «R», где «U» означает передвижение вверх, а «R» – передвижение
вправо. Если возможных оптимальных путей несколько, то выведите любой.
"""
n, m = list(map(int, input().split()))
data = []
res = []
for i in range(n):
    tmp = list(input())
    data.append(tmp)
    res.append([-1] * m)

for i in range(n - 1, -1, -1):
    for j in range(m):
        s1 = 0 if i == (n - 1) else res[i + 1][j]
        s2 = 0 if j == 0 else res[i][j - 1]
        res[i][j] = max(s1, s2) + int(data[i][j])

print(res[0][m - 1])

path = []
i = 0
j = m - 1
while i < n - 1 or j > 0:
    mi = -1 if i == n - 1 else res[i + 1][j]
    mj = -1 if j == 0 else res[i][j - 1]
    if mi > mj:
        path.append('U')
        if i != n - 1:
            i += 1
    else:
        path.append('R')
        if j != 0:
            j -= 1
path.reverse()
print(''.join(path))
