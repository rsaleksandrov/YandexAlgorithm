"""
ID 66553604

Программа реализована с использованием стека, построенного по принципу FILO.
Программа получает строку с выражением, записанным в обратной польской нотации
и преобразует его в массив, состоящий из операндов и знаков операций.
Далее в цикле проходим по всем элементам массива и прверяем:
- если текущий элемент является знаком операции, то извлекаем из стека сначала
второй операнд, потом первый операнд, выполняем операцию и результат помещаем
в стек.
- если текущий элемент не является знаком операции, то пробуем преобразовать
его в число. Если это удается, то помещаем его в стек, если нет, то ничего
не делаем.
после того как перебрали все элементы массива извлекаем из стека значение и
выводим его на экран.

Вычислительная сложность:
Так как стек реализован на основе массива и операции добавления и извлечения
осуществляются в/из конца массива и нет необходимости перемещать другие
элементы, то сложность данных операций составляет О(1)

Так как что бы обработать всю последовательность необходимо прйти по всем ее
элементам, то вычислительная сложность всей программы составляет О(n),
где n - количество операндов и операций.

Пространственная сложность:
Определим:
m - длина строки в байтах
k - количество операндов в строке
t - количество операторов
тогда стек в худшем случае займет О(k) памяти, массив для храннения операндов
и операций - O(k)+O(t), исходная строка - O(m).
Общая занимаемая программой память в худшем случае может быть оценена как
O(k)+O(k)+O(t)+O(m), что может рассматриваться как O(n).
"""
import operator


class SimpleStack:
    def __init__(self):
        self.stack = []

    def put(self, item):
        self.stack.append(item)

    def get(self):
        if len(self.stack) == 0:
            return None
        else:
            return self.stack.pop()

    def isEmpty(self):
        return len(self.stack) == 0


if __name__ == '__main__':
    operations = {
        '+': operator.add,
        '-': operator.sub,
        '*': operator.mul,
        '/': operator.floordiv
    }
    opersymbols = ('+', '-', '*', '/')

    iStr = input().split()
    mStack = SimpleStack()
    for ch in iStr:
        if ch in opersymbols:
            op2 = mStack.get()
            op1 = mStack.get()
            mStack.put(operations[ch](op1, op2))
        else:
            try:
                tmpval = int(ch)
                mStack.put(tmpval)
            except ValueError:
                pass

    print(mStack.get())
